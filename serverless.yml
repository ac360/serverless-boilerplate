service: serverless-boilerplate

provider:
  name: aws
  runtime: nodejs4.3
  region: us-east-1
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

plugins:
  - serverless-flow-plugin

functions:
  create:
    handler: handler.create
    events:
      - http:
          path: users
          method: post
          cors: true
          mocks:
            success: ${file(./mocks.js):create_success}
            error: ${file(./mocks.js):create_error_missing_email}
  show:
    handler: handler.show
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
          mocks:
            success: ${file(./mocks.js):show_success}
  update:
    handler: handler.update
    events:
      - http:
          path: users/{id}
          method: put
          cors: true
  delete:
    handler: handler.delete
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'users-${self:provider.stage}'
